server:
  port: 8080
  ssl:
    enabled: ${SSL_ENABLED:false}
  forward-headers-strategy: native

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_PASSWORD}
            scope: email, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            client-name: Google
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  data:
    redis:
      host: localhost
      port: 6379
      password:
      ssl:
        enabled: false
  datasource:
    url: ${DB_URL:default-jdbc-url}
    username: ${DB_USERNAME:default-username}
    password: ${DB_PASSWORD:default-password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update # 테이블 자동 생성/업데이트
    show-sql: true # 실행되는 SQL 쿼리 로그 출력
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect # MySQL 방언 설정
        format_sql: true # SQL 포맷팅
    open-in-view: false # OSIV 비활성화 (성능 최적화)

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

logging:
  file:
    name: /home/ubuntu/app/logs/app.log
  level:
    root: INFO
    org.springframework.data.redis: WARN
    org.springframework.jdbc: WARN
    org.springframework.web: INFO
